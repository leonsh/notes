git 用户配置文件~HOME/.gitconfig, 全局配置文件/etc/gitconfig
=======================================
git commit
第一行写简要信息
空行
写具体的提交信息.
$ git commit --amend (可以修改最后一次提交的信息)

# 从git服务器获取库
$ git clone git://git.denx.de/linux-2.6-denx.git linux-2.6-denx
$ git clone git://git.denx.de/u-boot.git u-boot.git
git-status

=============================
git-init-db
git-add xxx
git-status
git-commit -m ""
git-diff
"Untracked files"		>> new file, need git-add
"Changes to be committed"	>> git-add but not commit
"Changes to be updated"		>> file changed, need git-commit

ppc@power:~/CODE$ mkdir gittutorcn
ppc@power:~/CODE$ cd gittutorcn/
ppc@power:~/CODE/gittutorcn$ ls
ppc@power:~/CODE/gittutorcn$ git-init-db 
Initialized empty Git repository in /home/ppc/CODE/gittutorcn/.git/
ppc@power:~/CODE/gittutorcn$ cd .git/
ppc@power:~/CODE/gittutorcn/.git$ ls
branches  config  description  HEAD  hooks  info  objects  refs

ppc@power:~/CODE/gittutorcn/.git$ cd ..
ppc@power:~/CODE/gittutorcn$ echo "Hello world" > hello
ppc@power:~/CODE/gittutorcn$ echo "Homey" > example
ppc@power:~/CODE/gittutorcn$ ls
example  hello
ppc@power:~/CODE/gittutorcn$ git-add hello example
ppc@power:~/CODE/gittutorcn$ cd .git/
ppc@power:~/CODE/gittutorcn/.git$ ls
branches  config  description  HEAD  hooks  index  info  objects  refs

ppc@power:~/CODE/gittutorcn$ git-status 
# On branch master
#
# Initial commit
#
# Changes to be committed:
#   (use "git rm --cached <file>..." to unstage)
#
#       new file: example
#       new file: hello
#
ppc@power:~/CODE/gittutorcn$ git-commit -m "Initial commit of gittutor reposistory"
Created initial commit aa22b4b: Initial commit of gittutor reposistory
 2 files changed, 2 insertions(+), 0 deletions(-)
 create mode 100644 example
 create mode 100644 hello
ppc@power:~/CODE/gittutorcn$ git-status 
# On branch master
nothing to commit (working directory clean)
ppc@power:~/CODE/gittutorcn$ ls
ppc@power:~/CODE/gittutorcn/.git$ ls
branches  COMMIT_EDITMSG  config  description  HEAD  hooks  index  info  logs  objects  refs
ppc@power:~/CODE/gittutorcn$ git-diff
ppc@power:~/CODE/gittutorcn$ echo "It's a new day of git" >> hello
ppc@power:~/CODE/gittutorcn$ git-diff
diff --git a/hello b/hello
index 802992c..15eb1b0 100644
--- a/hello
+++ b/hello
@@ -1 +1,2 @@
 Hello world
+It's a new day of git
ppc@power:~/CODE/gittutorcn$ git-update-index hello 
ppc@power:~/CODE/gittutorcn$ git-commit -m "new day of git"
Created commit e50f334: new day of git
 1 files changed, 1 insertions(+), 0 deletions(-)
ppc@power:~/CODE/gittutorcn$

==================index,file,tree==================
git-cat-file -t SHA1
git-cat-file commit SHA1
git-cat-file bolb SHA1
ls .git/objects/ (contains commit tree blob)
cat ./git/refs/heads/master

==================checkout=========================
$ git-branch				查看分支情况
$ cat .git/HEAD			查看当前分支(.git/refs/heads分支信息存放路径)
$ git-checkout master
$ git-checkout -b robin		以master为基础创建一个新的分支，-b表示立即checkout该分支
$ git checkout -b rob taga	以taga为基础创建一个新的分支，-b表示立即checkout该分支
$ git-branch robin			创建一个分支但不切换到该分支，需要checkout才能切换到该分支
$ git-checkout master		切换到其他分支(当有文件需要提交时不允许切换)
$ git-branch -D robin		删除指定的一个分支
$ git-show-branch			查看分支树
$ git whatchanged -p branch1..branch2 查看分支区别


ppc@power:~/CODE/gittutorcn$ git-checkout -b robin 
Switched to a new branch "robin"
ppc@power:~/CODE/gittutorcn$
ppc@power:~/CODE/gittutorcn$ ls .git/refs/heads
master  robin
ppc@power:~/CODE/gittutorcn$ git-checkout master
Switched to branch "master"
ppc@power:~/CODE/gittutorcn$ git-branch -D robin
Deleted branch robin.
ppc@power:~/CODE/gittutorcn$ 
ppc@power:~/CODE/gittutorcn$ git-status 
# On branch master
nothing to commit (working directory clean)
ppc@power:~/CODE/gittutorcn$
ppc@power:~/CODE/gittutorcn$ git-checkout -b robin
Switched to a new branch "robin"
ppc@power:~/CODE/gittutorcn$ git-branch
  master
* robin
ppc@power:~/CODE/gittutorcn$ cat .git/HEAD 
ref: refs/heads/robin
ppc@power:~/CODE/gittutorcn$ echo "Work, work, workd" >> hello
ppc@power:~/CODE/gittutorcn$ git-commit -m "Some workd" -i hello
Created commit c93a77d: Some workd
 1 files changed, 1 insertions(+), 0 deletions(-)
ppc@power:~/CODE/gittutorcn$ git-status
# On branch robin
nothing to commit (working directory clean)
ppc@power:~/CODE/gittutorcn$ git-checkout master
Switched to branch "master"
ppc@power:~/CODE/gittutorcn$ echo "Play, play, play" >> hello
ppc@power:~/CODE/gittutorcn$ echo "Lots of fun" >> example
ppc@power:~/CODE/gittutorcn$ git-commit -m "Some fun" -i hello example
Created commit 0e99ea3: Some fun
 2 files changed, 2 insertions(+), 0 deletions(-)
ppc@power:~/CODE/gittutorcn$ 
ppc@power:~/CODE/gittutorcn$ git-show-branch 
* [master] Some fun
 ! [robin] Some workd
--
*  [master] Some fun
 + [robin] Some workd
*+ [master^] new day of git
ppc@power:~/CODE/gittutorcn$ git-diff master^ robin
diff --git a/hello b/hello
index 15eb1b0..e62cad3 100644
--- a/hello
+++ b/hello
@@ -1,2 +1,3 @@
 Hello world
 It's a new day of git
+Work, work, workd
ppc@power:~/CODE/gittutorcn$
ppc@power:~/CODE/gittutorcn$
ppc@power:~/CODE/gittutorcn$
ppc@power:~/CODE/gittutorcn$ git-status 
# On branch master
nothing to commit (working directory clean)
ppc@power:~/CODE/gittutorcn$ 
ppc@power:~/CODE/gittutorcn$ git-whatchanged 
commit 0e99ea365a331f76660c472034600d04dd5a1e67
Author: ppc <ppc@power.(none)>
Date:   Wed Apr 1 22:01:11 2009 +0800

    Some fun

:100644 100644 d8fcd31... 6ebb9eb... M  example
:100644 100644 15eb1b0... 0ddb405... M  hello

commit e50f334425d6bc82740dafb8c5034201f439b569
Author: ppc <ppc@power.(none)>
Date:   Wed Apr 1 21:55:54 2009 +0800

    new day of git

:100644 100644 802992c... 15eb1b0... M  hello

commit aa22b4ba6007e10076bc25e59ebf2665747b3e27
Author: ppc <ppc@power.(none)>
Date:   Wed Apr 1 21:54:07 2009 +0800

    Initial commit of gittutor reposistory

:000000 100644 0000000... d8fcd31... A  example
:000000 100644 0000000... 802992c... A  hello
ppc@power:~/CODE/gittutorcn$
ppc@power:~/CODE/gittutorcn$ git-status
# On branch master
nothing to commit (working directory clean)
ppc@power:~/CODE/gittutorcn$

=================git-reset=========================


=================git-useage========================

================git tag============================
# git tag v1.4
# git tag -a v1.4 (with annotated，包含注释信息的tag)
# git tag -s v1.4 (with GPT，包含注释信息以及GPG信息)
$ git-cat-file .git/refs/tags/TAG
$ git 

diff --exclude=CVS --exclude=*.o --exclude=build_8500 --exclude=.git* --exclude=*.map --exclude=*.dep --exclude=*.lib -uNr 8500.git/ 20090616_R1032/
================git merge=========================
git merge experiment (合并分支，冲突文件需要自己手工修复)

merge例子：
1.删除无效文件
rm -rf DRIVER/dx253
find -name *~ | xargs rm
find -name *.bak |xargs rm
find -name .#* |xargs rm
make clean
2.比较是否有不同的文件
diff --exclude=CVS --exclude=*.o --exclude=build_8500 --exclude=.git* --exclude=*.map --exclude=*.dep --exclude=*.lib -qNr 8500.git/ 20100409_R1052/
3.生成patch文件
diff --exclude=CVS --exclude=*.[oa] --exclude=build_8500 --exclude=.git* --exclude=*.map --exclude=*.dep --exclude=*.lib -uNr 8500.git/ 20100409_R1052/
4.将patch应用的git最新代码中
patch -p1 < ../52.patch
5.提交到git库并且生成一个annoted tag
git add .
git commit
git tag -a 02.01.10.52

===============放弃当前的修改=====================
git checkout HEAD file
git reset --hard HEAD

===============rebase==========================
1.利用rebase，可以将master上的最新代码merge到分支上，并且使分支的根节点重新定位到master的最新提交.
2.修改以前提交过的commit信息.
	git rebase bbc643cd^ –interactive
		通过删除行来移去提交
		通过为行重新排序来为提交重新排序
		用“edit”来替换“pick”来标志一个提交可修改
		用“squash”来替换“pick”来将一个提交和前一个合并
	git commit --amend
	git rebase --continue

===============提交到服务器(push)==================
git fetch	//跟新本地代码到本地（需要merge才能合并到本地代码中）
git merge	//合并更新后的代码到本地
git pull	//这条命令是git fetch/git merge的一个组合
git diff --cache	//查看已修改的内容
git push REMOTENAME LOCALBRANCHNAME:REMOTEBRANCHNAME //提交本地的branch到远程的branch
git push origin test:aaa

===============与SVN合并使用=====================
1.git svn init -s svn://192.168.1.40
2.git svn fetch

===============与CVS合并使用=====================
0.安装cvsps(根据不同条件来产生patch文件), git-cvs
1.先cvs login登录到CVS服务器
2.git cvsimport -v -d :pserver:lzhang@192.168.1.50:/root 8500_CTC_2_1 -A /home/ocean/user.txt
增量获取CVS修改的patch
3.git cvsimport -v -d :pserver:lzhang@192.168.1.50:/root -o master 8500_CTC_2_1 -A /home/ocean/user.txt

===============remote============================
1.git remove -v			//列出所有远程库的名字(-v显示地址)
2.git remote add shortname url	//添加一个远程库并且用shortname代表其地址
3.git fetch shortname		//从远程库更新最新代码到本地,然后后就可以合并到本地的分支上了
4.git push origin master	//将本地的master提交到服务器上去
5.git push origin test:aaa	//将本地的test分之提交到服务器的aaa分支上
5.git remote show origin	//查看远程库的状态，包括是否有更新，是否有废弃/新增/更新的分支
6.git remote rename old new	//重命名远程库的名字
7.git remote rm showname	//删除一个远程库

=============从git库中删除文件==================
1.git filter-branch --index-filter \
		'git rm --cached --ignore-unmatch filename' -- bba32dc039..
